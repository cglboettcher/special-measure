function ind = smloadinst(file, ind, adapter, args)
% function ind = smloadinst(file, ind, adaptor, varargin)
% Add instrument from file generated by smsaveinst to rack at position ind.
% ind defaults to end+1. 
% adapter is the HW adapter driver 
% args are arguments to the instrument object constructor, e.g. gpib,
% visa or serial. If not defaults, the settings are taken from the file
% loaded. (Useful if file was created on the same system).

global smdata;

if ~exist('file','var') || isempty(file) 
    file = uigetfile('','MultiSelect','on');     
end
if ~iscell(file)
    file = {file};
end

if ~exist('ind','var') || isempty(ind)
    if isfield(smdata, 'inst')
        ind = length(smdata.inst)+1;
    else
        ind = 1;
    end
end

if isempty(strfind(file, 'sminst'))
    file = ['sminst_', file];
end

load(file);

if ~isempty(constructor)
    if ~exist('adapter','var') || isempty(adapter) 
        switch func2str(constructor.fn)
            case {'gpib', 'visa'}
               installedDrivers = instrhwinfo('visa');
                    if ~isempty(installedDrivers)
                        if iscell(installedDrivers)
                            adapter = installedDrivers{1};
                        else
                            adapter = installedDrivers;
                        end
                    else
                        error('No VISA drivers installed');
                    end                 
            otherwise 
                adapter = {};
        end
    elseif ~iscell(adapter)
        adapter = {adapter};
    end
    if ~strcmp(adapter, 'none')
        if nargin >= 4
            constructor.args = args;
        end
        
        inst.data.inst = constructor.fn(adapter{:}, constructor.args{:});
        set(inst.data.inst, constructor.params, constructor.vals) ;
    end
end
if exist('channels','var') 
    if isfield(smdata.channels) 
        smdata.channels(chaninds) = channels; 
        smdata.channels(chaninds).instchan(1) = ind; 
    else
        
    end
end
if isfield(smdata,'inst') && length(smdata.inst) >= ind
    warning('Overwriting instrument')
end

smdata.inst(ind) = inst;

smcheckdata;
